{"version":3,"sources":["./src/app/api/request-builder.ts","./src/app/login/login-page/login-page.component.html","./src/app/login/login-page/login-page.component.ts","./src/app/api/services/weather-forecast.service.ts","./src/app/api/api.module.ts","./src/app/home-page/ghigo/ghigo.component.ts","./src/app/home-page/ghigo/ghigo.component.html","./src/environments/environment.ts","./src/app/api/services.ts","./src/app/api/api-configuration.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/api/base-service.ts","./src/app/app.module.ts","./src/app/home-page/main-container/main-container.component.ts","./src/app/home-page/main-container/main-container.component.html","./src/app/interceptor/http-interceptor-token.ts","./src/app/home-page/simo/simo.component.ts","./src/app/home-page/simo/simo.component.html","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/AuthGard.ts","./src/app/app-routing.module.ts","./src/app/api/services/login.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA,oBAAoB;AACpB,oBAAoB;AAC4E;AAEhG;;;GAGG;AACH,MAAM,cAAc;IAClB,SAAS,CAAC,GAAW;QACnB,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,GAAW;QACnB,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACF;AACD,MAAM,sBAAsB,GAAG,IAAI,cAAc,EAAE,CAAC;AAUpD;;GAEG;AACH,MAAe,SAAS;IACtB,YAAmB,IAAY,EAAS,KAAU,EAAS,OAAyB,EAAE,YAAoB,EAAE,cAAuB;QAAhH,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAAS,YAAO,GAAP,OAAO,CAAkB;QAClF,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;YACnE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACvE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,cAAc,CAAC;SACvC;IACH,CAAC;IAED,cAAc,CAAC,KAAU,EAAE,SAAS,GAAG,GAAG;QACxC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE;YACjC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpH;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACpC,MAAM,KAAK,GAAa,EAAE,CAAC;YAC3B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzB,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;oBAC7C,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC5F,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;wBACxB,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC,CAAC;qBACjC;yBAAM;wBACL,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrB;iBACF;aACF;YACD,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACL,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;CACF;AAED;;GAEG;AACH,MAAM,aAAc,SAAQ,SAAS;IACnC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACvD,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;QAC1E,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACnC,qEAAqE;YACrE,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBACrD,MAAM,GAAG,GAAG,CAAC;gBACb,IAAI,KAAK,YAAY,KAAK,EAAE;oBAC1B,yDAAyD;oBACzD,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;oBACtE,SAAS,GAAG,GAAG,CAAC;iBACjB;qBAAM;oBACL,wDAAwD;oBACxD,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBACzC;aACF;SACF;QACD,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACvD,8GAA8G;QAC9G,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACxF,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED;;GAEG;AACH,MAAM,cAAe,SAAQ,SAAS;IACpC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,MAAkB;QACvB,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK,EAAE;YAC/B,sBAAsB;YACtB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3D;aACF;iBAAM;gBACL,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,gBAAgB;oBACvD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,eAAe;oBAC5C,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAChB,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAC7E;SACF;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YAChE,uBAAuB;YACvB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,EAAE;gBACvC,2DAA2D;gBAC3D,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC9E;iBACF;aACF;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC/B,mEAAmE;gBACnE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3D;iBACF;aACF;iBAAM;gBACL,8FAA8F;gBAC9F,MAAM,KAAK,GAAU,EAAE,CAAC;gBACxB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrB;iBACF;gBACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/D;SACF;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC1D,cAAc;YACd,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACpE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED;;GAEG;AACH,MAAM,eAAgB,SAAQ,SAAS;IACrC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,OAAoB;QACzB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACnD,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK,EAAE;gBAC/B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7D;aACF;iBAAM;gBACL,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACtE;SACF;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AAED;;GAEG;AACI,MAAM,cAAc;IAQzB,YACS,OAAe,EACf,aAAqB,EACrB,MAAc;QAFd,YAAO,GAAP,OAAO,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAQ;QACrB,WAAM,GAAN,MAAM,CAAQ;QATf,UAAK,GAAG,IAAI,GAAG,EAAyB,CAAC;QACzC,WAAM,GAAG,IAAI,GAAG,EAA0B,CAAC;QAC3C,YAAO,GAAG,IAAI,GAAG,EAA2B,CAAC;IAQrD,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACvD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACzD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,KAAU,EAAE,WAAW,GAAG,kBAAkB;QAC/C,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,gBAAgB,KAAK,mCAAmC,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAChH,0BAA0B;YAC1B,MAAM,KAAK,GAAe,EAAE,CAAC;YAC7B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,EAAE;oBAC3B,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBACb;gBACD,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;oBACnB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC9B;iBACF;aACF;YACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzG;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,qBAAqB,EAAE;YAC1D,6BAA6B;YAC7B,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACpC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,GAAG,YAAY,KAAK,EAAE;wBACxB,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;4BACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BACvC,IAAI,QAAQ,KAAK,IAAI,EAAE;gCACrB,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;6BAChC;yBACF;qBACF;yBAAM;wBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACzC,IAAI,QAAQ,KAAK,IAAI,EAAE;4BACrB,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;yBAC7B;qBACF;iBACF;aACF;YACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;SAC9B;aAAM;YACL,gCAAgC;YAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;IACH,CAAC;IAEO,aAAa,CAAC,KAAU;QAC9B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,KAAK,CAAU,OASd;QAEC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAExB,kBAAkB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;QAC9B,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEhC,mBAAmB;QACnB,IAAI,UAAU,GAAG,IAAI,+DAAU,CAAC;YAC9B,OAAO,EAAE,sBAAsB;SAChC,CAAC,CAAC;QACH,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;YAC7C,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC5C;QAED,oBAAoB;QACpB,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE,CAAC;QACpC,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5D;QACD,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC/C,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC/C;QAED,0BAA0B;QAC1B,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,YAAY,QAAQ,CAAC,EAAE;YACrE,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACtE;QAED,sBAAsB;QACtB,OAAO,IAAI,gEAAW,CAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE;YAC3E,MAAM,EAAE,UAAU;YAClB,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,cAAc,EAAE,OAAO,CAAC,cAAc;SACvC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICxTO,0EAAoD;IAClD,0FACF;IAAA,4DAAM;;AC9BP,MAAM,kBAAkB;IAE7B,YAAoB,IAAgB,EAAU,MAAc,EAAU,WAAyB;QAA3E,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAc;QACxF,SAAI,GAAe;YACxB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,KAAK;SAClB;QACD,iBAAY,GAAY,KAAK,CAAC;IANqE,CAAC;IAMtE,CAAC;IAE/B,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAEnE,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAM,QAAQ,CAAC,CAAC;YAC/C,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;YACnC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,EAAE,MAAM,CAAC,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAE3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;;oFA7BU,kBAAkB;kGAAlB,kBAAkB;QDQ7B,yEAA2B;QACzB,0EAAyC;QAArB,8IAAY,WAAO,IAAC;QACtC,6EAAuB;QACrB,wEAAoB;QAAA,qEAAU;QAAA,4DAAK;QACnC,2EACA;QAAA,wEAAiB;QAAA,gHAAiD;QAAA,4DAAK;QACzE,4DAAU;QACV,yEAAyB;QACvB,sFAAqB;QACnB,4EAA2B;QAAA,oEAAQ;QAAA,4DAAQ;QAC3C,4EAAwF;QAA3B,2LAAwB;QAArF,4DAAwF;QAC1F,4DAAsB;QACtB,0FAAwB;QACtB,4EAA2B;QAAA,oEAAQ;QAAA,4DAAQ;QAC3C,4EAAwG;QAA9B,8LAA2B;QAArG,4DAAwG;QAC1G,4DAAyB;QACzB,wFAAsB;QACpB,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,4EAAqF;QAAhC,gMAA6B;QAAlF,4DAAqF;QACvF,4DAAuB;QACvB,iHAEM;QACN,8EAA8C;QAAA,iEAAK;QAAA,4DAAS;QAC9D,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAhB+D,2DAAwB;QAAxB,mFAAwB;QAIX,0DAA2B;QAA3B,sFAA2B;QAIhD,0DAA6B;QAA7B,wFAA6B;QAE9E,0DAAuB;QAAvB,kFAAuB;;;;;;;;;;;;;;AEpCrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAClB;AAGM;AAEP;;;;AAOtC,MAAM,sBAAuB,SAAQ,yDAAW;IACrD,YACE,MAAwB,EACxB,IAAgB;QAEhB,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtB,CAAC;IAOD;;;;;OAKG;IACH,iCAAiC,CAAC,MACjC;QAEC,MAAM,EAAE,GAAG,IAAI,+DAAc,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAClG,IAAI,MAAM,EAAE;SACX;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,YAAY,EAAE,MAAM;YACpB,MAAM,EAAE,YAAY;SACrB,CAAC,CAAC,CAAC,IAAI,CACN,6DAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,iEAAY,CAAC,EAC7C,0DAAG,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3B,OAAO,CAA+C,CAAC;QACzD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CAAC,MACxB;QAEC,OAAO,IAAI,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,CAAC,CAA6C,EAAE,EAAE,CAAC,CAAC,CAAC,IAA8B,CAAC,CACzF,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gCAAgC,CAAC,MAChC;QAEC,MAAM,EAAE,GAAG,IAAI,+DAAc,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAClG,IAAI,MAAM,EAAE;SACX;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,YAAY,EAAE,MAAM;YACpB,MAAM,EAAE,WAAW;SACpB,CAAC,CAAC,CAAC,IAAI,CACN,6DAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,iEAAY,CAAC,EAC7C,0DAAG,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3B,OAAO,CAA+C,CAAC;QACzD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CAAC,MACvB;QAEC,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,CAAC,CAA6C,EAAE,EAAE,CAAC,CAAC,CAAC,IAA8B,CAAC,CACzF,CAAC;IACJ,CAAC;;AA/ED;;GAEG;AACa,6CAAsB,GAAG,kBAAkB,CAAC;4FAXjD,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAEvB;AACqB;;;AAE7E;;GAEG;AAWI,MAAM,SAAS;IAapB,YAC0B,YAAuB,EACnC,IAAgB;QAE5B,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;SACrF;QACD,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,+DAA+D;gBAC/E,0DAA0D,CAAC,CAAC;SAC7D;IACH,CAAC;IAvBD,MAAM,CAAC,OAAO,CAAC,MAA8B;QAC3C,OAAO;YACL,QAAQ,EAAE,SAAS;YACnB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mEAAgB;oBACzB,QAAQ,EAAE,MAAM;iBACjB;aACF;SACF;IACH,CAAC;;wFAXU,SAAS;4IAAT,SAAS,yDAcoB,SAAS,kJApBtC;QACT,oEAAY;QACZ,yFAAsB;QACtB,mEAAgB;KACjB,YAPQ,EAAE;;;;;;;;;;;;;;;;;;;;;ACJN,MAAM,cAAc;IAEzB,YAAoB,IAAgB,EAAU,WAAmC;QAA7D,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAwB;QAE1E,gBAAW,GAAQ,YAAY,CAAC;IAF8C,CAAC;IAGtF,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAE9D,UAAU,CAAI,GAAE,EAAE;gBAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;YAC7E,CAAC,EACE,IAAI,CAAC;QACV,CAAC,EAAE,MAAM,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;;4EAjBU,cAAc;8FAAd,cAAc;QCT3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QACnB,yEAA+C;QAC/C,uDACA;QAAA,4DAAM;;QADN,0DACA;QADA,6FACA;;;;;;;;;;;;;;ACHA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACqB;;;;;;;;;;;;;;;;;ACG7E;;GAEG;AAII,MAAM,gBAAgB;IAH7B;QAIE,YAAO,GAAW,EAAE,CAAC;KACtB;;gFAFY,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,MAAM,YAAY;IAEvB,YAAoB,IAAgB,EAAU,WAAmC,EAAU,SAA2B,EAAU,MAAc;QAA1H,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAwB;QAAU,cAAS,GAAT,SAAS,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAG9I,UAAK,GAAG,iBAAiB,CAAC;QAenB,WAAM,GAAG,GAAG,EAAE;YACnB,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IAlBD,CAAC;IAGF,QAAQ;IAEP,CAAC;IAED,mBAAmB;QACjB,MAAM,KAAK,GAAQ,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAClD,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;wEAnBU,YAAY;4FAAZ,YAAY;QCVzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;ACK/B;;GAEG;AAEI,MAAM,WAAW;IACtB,YACY,MAAwB,EACxB,IAAgB;QADhB,WAAM,GAAN,MAAM,CAAkB;QACxB,SAAI,GAAJ,IAAI,CAAY;QAIpB,aAAQ,GAAW,EAAE,CAAC;IAF9B,CAAC;IAID;;;OAGG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,IAAI,OAAO,CAAC,OAAe;QACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;;sEAtBU,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACF;AACkC;AACH;AAC/B;AACE;AACA;AAC8B;AACtC;AACM;AACgD;AAC9C;AACwB;AAC1B;;;;;;AAEtC,SAAS,WAAW;IACzB,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACrC,CAAC;AAoCM,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBANT;QACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,oFAAe,EAAE,KAAK,EAAE,IAAI,EAAE;QACtE,oDAAS;KAAC,YAzBH;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAa;YACb,4FAAuB;YACvB,qEAAgB;YAChB,2DAAW;YACX,6DAAY;YACZ,uEAAa;YACb,yDAAS,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;YACvD,4DAAY,CAAC,OAAO,CAAC;gBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2DAAY,EAAE,WAAW,EAAE,CAAC,oDAAS,CAAC,EAAE;gBAC/D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yFAAkB,EAAE;aACjD,CAAC;YACF,4DAAS,CAAC,OAAO,CAAC;gBAChB,MAAM,EAAE;oBACN,WAAW,EAAE,WAAW;oBACxB,cAAc,EAAE,CAAC,gBAAgB,CAAC;oBAClC,gBAAgB,EAAE,EAAE;iBACrB;aACF,CAAC;YACF,2DAAW,CAAC,OAAO,EAAE;SACtB;oIAOU,SAAS,mBAhClB,2DAAY;QACZ,0GAAsB,aAGtB,uEAAa;QACb,oEAAgB;QAChB,0DAAa;QACb,4FAAuB;QACvB,qEAAgB;QAChB,2DAAW;QACX,6DAAY;QACZ,uEAAa;;;;;;;;;;;;;;;;;;;;;;;AC7BV,MAAM,sBAAsB;IAGjC;QAFA,cAAS,GAAW,KAAK,CAAC;IAEV,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FANU,sBAAsB;sGAAtB,sBAAsB;QCPnC,yEAA4B;QACxB,4EAAgC;QAC9B,yEAAsB;QACpB,uEAAyC;QACvC,yEAAoC;QACpC,0EAAoB;QAAA,0EAAe;QAAA,4DAAO;QAC5C,4DAAI;QACN,4DAAM;QAEN,yEAA4B;QAC1B,uEAAwE;QACtE,yEAAiC;QACnC,4DAAI;QACN,4DAAM;QACR,4DAAS;QAET,0EAA+B;QAC7B,2EAA0B;QAC9B,4EAA+B;QAC3B,4DAAM;QACN,wFAA6F;QAAxC,yOAAuC;QAC1F,yEAAqE;QACnE,2EAAqD;QACrD,mEACF;QAAA,4DAAI;QACJ,yEAAoE;QAClE,2EAAqD;QACnD,kEACJ;QAAA,4DAAI;QAEN,4DAAmB;QACrB,4DAAM;QACR,4DAAM;;QAZgB,2DAAkC;QAAlC,2FAAkC;;;;;;;;;;;;;;;;;;ACfnD,MAAM,eAAe;IACxB,SAAS,CAAC,OAAyB,EAAE,UAAuB;QAExD,mCAAmC;QACnC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC;QAE7C,IAAI,KAAK,EAAE;YACP,sCAAsC;YACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,UAAU,KAAK,EAAE;oBAChC,cAAc,EAAE,iCAAiC;iBACpD;aACJ,CAAC,CAAC;SACN;QAED,OAAO,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;;8EAlBQ,eAAe;kGAAf,eAAe,WAAf,eAAe;;;;;;;;;;;;;;;;;ACErB,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;ACAlqC;;;;;;;;;;;;;;;;;;;;AC9NO,MAAM,SAAS;IACpB,YAAoB,SAA2B,EAAU,MAAc;QAAnD,cAAS,GAAT,SAAS,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;IACvE,CAAC;IACD,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC;YACjD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;;kEAbU,SAAS;4FAAT,SAAS,WAAT,SAAS;;;;;;;;;;;;;ACJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAChB;AAC4B;AAC0B;AAC7B;;;AAEhE,MAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAC,GAAG,EAAE,CAAC,yJAA8B,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,WAAW,CAAC;KACzE;IACD,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yGAAsB,EAAE,WAAW,EAAC,CAAC,mDAAS,CAAC;QACnE,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+EAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,4EAAa,EAAE;SAC7C,EAAC;CACH,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACnBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAClB;AAGM;AAEP;;;;AAOtC,MAAM,YAAa,SAAQ,yDAAW;IAC3C,YACE,MAAwB,EACxB,IAAgB;QAEhB,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtB,CAAC;IAOD;;;;;OAKG;IACH,kBAAkB,CAAC,MAElB;QAEC,MAAM,EAAE,GAAG,IAAI,+DAAc,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAChF,IAAI,MAAM,EAAE;YACV,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,YAAY,EAAE,MAAM;YACpB,MAAM,EAAE,KAAK;SACd,CAAC,CAAC,CAAC,IAAI,CACN,6DAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,iEAAY,CAAC,EAC7C,0DAAG,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3B,OAAQ,CAAuB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAA6B,CAAC;QACzF,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,SAAS,CAAC,MAET;QAEC,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,CAAC,CAA2B,EAAE,EAAE,CAAC,CAAC,CAAC,IAAY,CAAC,CACrD,CAAC;IACJ,CAAC;;AA5CD;;GAEG;AACa,0BAAa,GAAG,QAAQ,CAAC;wEAX9B,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;ACd2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\nimport { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders } from '@angular/common/http';\r\n\r\n/**\r\n * Custom parameter codec to correctly handle the plus sign in parameter\r\n * values. See https://github.com/angular/angular/issues/18261\r\n */\r\nclass ParameterCodec implements HttpParameterCodec {\r\n  encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n\r\n  encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n\r\n  decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\nconst ParameterCodecInstance = new ParameterCodec();\r\n\r\n/**\r\n * Defines the options for appending a parameter\r\n */\r\ninterface ParameterOptions {\r\n  style?: string;\r\n  explode?: boolean;\r\n}\r\n\r\n/**\r\n * Base class for a parameter\r\n */\r\nabstract class Parameter {\r\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\r\n    this.options = options || {};\r\n    if (this.options.style === null || this.options.style === undefined) {\r\n      this.options.style = defaultStyle;\r\n    }\r\n    if (this.options.explode === null || this.options.explode === undefined) {\r\n      this.options.explode = defaultExplode;\r\n    }\r\n  }\r\n\r\n  serializeValue(value: any, separator = ','): string {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    } else if (value instanceof Array) {\r\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\r\n    } else if (typeof value === 'object') {\r\n      const array: string[] = [];\r\n      for (const key of Object.keys(value)) {\r\n        let propVal = value[key];\r\n        if (propVal !== null && propVal !== undefined) {\r\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\r\n          if (this.options.explode) {\r\n            array.push(`${key}=${propVal}`);\r\n          } else {\r\n            array.push(key);\r\n            array.push(propVal);\r\n          }\r\n        }\r\n      }\r\n      return array.join(separator);\r\n    } else {\r\n      return String(value);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A parameter in the operation path\r\n */\r\nclass PathParameter extends Parameter {\r\n  constructor(name: string, value: any, options: ParameterOptions) {\r\n    super(name, value, options, 'simple', false);\r\n  }\r\n\r\n  append(path: string): string {\r\n    let value = this.value;\r\n    if (value === null || value === undefined) {\r\n      value = '';\r\n    }\r\n    let prefix = this.options.style === 'label' ? '.' : '';\r\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\r\n    if (this.options.style === 'matrix') {\r\n      // The parameter name is just used as prefix, except in some cases...\r\n      prefix = `;${this.name}=`;\r\n      if (this.options.explode && typeof value === 'object') {\r\n        prefix = ';';\r\n        if (value instanceof Array) {\r\n          // For arrays we have to repeat the name for each element\r\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\r\n          separator = ';';\r\n        } else {\r\n          // For objects we have to put each the key / value pairs\r\n          value = this.serializeValue(value, ';');\r\n        }\r\n      }\r\n    }\r\n    value = prefix + this.serializeValue(value, separator);\r\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\r\n    path = path.replace(`{${this.name}}`, value);\r\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\r\n    return path;\r\n  }\r\n}\r\n\r\n/**\r\n * A parameter in the query\r\n */\r\nclass QueryParameter extends Parameter {\r\n  constructor(name: string, value: any, options: ParameterOptions) {\r\n    super(name, value, options, 'form', true);\r\n  }\r\n\r\n  append(params: HttpParams): HttpParams {\r\n    if (this.value instanceof Array) {\r\n      // Array serialization\r\n      if (this.options.explode) {\r\n        for (const v of this.value) {\r\n          params = params.append(this.name, this.serializeValue(v));\r\n        }\r\n      } else {\r\n        const separator = this.options.style === 'spaceDelimited'\r\n          ? ' ' : this.options.style === 'pipeDelimited'\r\n            ? '|' : ',';\r\n        return params.append(this.name, this.serializeValue(this.value, separator));\r\n      }\r\n    } else if (this.value !== null && typeof this.value === 'object') {\r\n      // Object serialization\r\n      if (this.options.style === 'deepObject') {\r\n        // Append a parameter for each key, in the form `name[key]`\r\n        for (const key of Object.keys(this.value)) {\r\n          const propVal = this.value[key];\r\n          if (propVal !== null && propVal !== undefined) {\r\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\r\n          }\r\n        }\r\n      } else if (this.options.explode) {\r\n        // Append a parameter for each key without using the parameter name\r\n        for (const key of Object.keys(this.value)) {\r\n          const propVal = this.value[key];\r\n          if (propVal !== null && propVal !== undefined) {\r\n            params = params.append(key, this.serializeValue(propVal));\r\n          }\r\n        }\r\n      } else {\r\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\r\n        const array: any[] = [];\r\n        for (const key of Object.keys(this.value)) {\r\n          const propVal = this.value[key];\r\n          if (propVal !== null && propVal !== undefined) {\r\n            array.push(key);\r\n            array.push(propVal);\r\n          }\r\n        }\r\n        params = params.append(this.name, this.serializeValue(array));\r\n      }\r\n    } else if (this.value !== null && this.value !== undefined) {\r\n      // Plain value\r\n      params = params.append(this.name, this.serializeValue(this.value));\r\n    }\r\n    return params;\r\n  }\r\n}\r\n\r\n/**\r\n * A parameter in the HTTP request header\r\n */\r\nclass HeaderParameter extends Parameter {\r\n  constructor(name: string, value: any, options: ParameterOptions) {\r\n    super(name, value, options, 'simple', false);\r\n  }\r\n\r\n  append(headers: HttpHeaders): HttpHeaders {\r\n    if (this.value !== null && this.value !== undefined) {\r\n      if (this.value instanceof Array) {\r\n        for (const v of this.value) {\r\n          headers = headers.append(this.name, this.serializeValue(v));\r\n        }\r\n      } else {\r\n        headers = headers.append(this.name, this.serializeValue(this.value));\r\n      }\r\n    }\r\n    return headers;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper to build http requests from parameters\r\n */\r\nexport class RequestBuilder {\r\n\r\n  private _path = new Map<string, PathParameter>();\r\n  private _query = new Map<string, QueryParameter>();\r\n  private _header = new Map<string, HeaderParameter>();\r\n  _bodyContent: any | null;\r\n  _bodyContentType?: string;\r\n\r\n  constructor(\r\n    public rootUrl: string,\r\n    public operationPath: string,\r\n    public method: string) {\r\n  }\r\n\r\n  /**\r\n   * Sets a path parameter\r\n   */\r\n  path(name: string, value: any, options?: ParameterOptions): void {\r\n    this._path.set(name, new PathParameter(name, value, options || {}));\r\n  }\r\n\r\n  /**\r\n   * Sets a query parameter\r\n   */\r\n  query(name: string, value: any, options?: ParameterOptions): void {\r\n    this._query.set(name, new QueryParameter(name, value, options || {}));\r\n  }\r\n\r\n  /**\r\n   * Sets a header parameter\r\n   */\r\n  header(name: string, value: any, options?: ParameterOptions): void {\r\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\r\n  }\r\n\r\n  /**\r\n   * Sets the body content, along with the content type\r\n   */\r\n  body(value: any, contentType = 'application/json'): void {\r\n    if (value instanceof Blob) {\r\n      this._bodyContentType = value.type;\r\n    } else {\r\n      this._bodyContentType = contentType;\r\n    }\r\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\r\n      // Handle URL-encoded data\r\n      const pairs: string[][] = [];\r\n      for (const key of Object.keys(value)) {\r\n        let val = value[key];\r\n        if (!(val instanceof Array)) {\r\n          val = [val];\r\n        }\r\n        for (const v of val) {\r\n          const formValue = this.formDataValue(v);\r\n          if (formValue !== null) {\r\n            pairs.push([key, formValue]);\r\n          }\r\n        }\r\n      }\r\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\r\n    } else if (this._bodyContentType === 'multipart/form-data') {\r\n      // Handle multipart form data\r\n      const formData = new FormData();\r\n      if (value !== null && value !== undefined) {\r\n        for (const key of Object.keys(value)) {\r\n          const val = value[key];\r\n          if (val instanceof Array) {\r\n            for (const v of val) {\r\n              const toAppend = this.formDataValue(v);\r\n              if (toAppend !== null) {\r\n                formData.append(key, toAppend);\r\n              }\r\n            }\r\n          } else {\r\n            const toAppend = this.formDataValue(val);\r\n            if (toAppend !== null) {\r\n              formData.set(key, toAppend);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this._bodyContent = formData;\r\n    } else {\r\n      // The body is the plain content\r\n      this._bodyContent = value;\r\n    }\r\n  }\r\n\r\n  private formDataValue(value: any): any {\r\n    if (value === null || value === undefined) {\r\n      return null;\r\n    }\r\n    if (value instanceof Blob) {\r\n      return value;\r\n    }\r\n    if (typeof value === 'object') {\r\n      return JSON.stringify(value);\r\n    }\r\n    return String(value);\r\n  }\r\n\r\n  /**\r\n   * Builds the request with the current set parameters\r\n   */\r\n  build<T = any>(options?: {\r\n    /** Which content types to accept */\r\n    accept?: string;\r\n\r\n    /** The expected response type */\r\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\r\n\r\n    /** Whether to report progress on uploads / downloads */\r\n    reportProgress?: boolean;\r\n  }): HttpRequest<T> {\r\n\r\n    options = options || {};\r\n\r\n    // Path parameters\r\n    let path = this.operationPath;\r\n    for (const pathParam of this._path.values()) {\r\n      path = pathParam.append(path);\r\n    }\r\n    const url = this.rootUrl + path;\r\n\r\n    // Query parameters\r\n    let httpParams = new HttpParams({\r\n      encoder: ParameterCodecInstance\r\n    });\r\n    for (const queryParam of this._query.values()) {\r\n      httpParams = queryParam.append(httpParams);\r\n    }\r\n\r\n    // Header parameters\r\n    let httpHeaders = new HttpHeaders();\r\n    if (options.accept) {\r\n      httpHeaders = httpHeaders.append('Accept', options.accept);\r\n    }\r\n    for (const headerParam of this._header.values()) {\r\n      httpHeaders = headerParam.append(httpHeaders);\r\n    }\r\n\r\n    // Request content headers\r\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\r\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\r\n    }\r\n\r\n    // Perform the request\r\n    return new HttpRequest<T>(this.method.toUpperCase(), url, this._bodyContent, {\r\n      params: httpParams,\r\n      headers: httpHeaders,\r\n      responseType: options.responseType,\r\n      reportProgress: options.reportProgress\r\n    });\r\n  }\r\n}\r\n\r\n","<!-- <p>Pagina di login, autenticarsi con!</p>\n<div>Email: prova</div>\n<div>Password: prova</div>\n\n<form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n    <div class=\"container-fluid\">\n      <h2 class=\"form-signin-heading\">Login</h2>\n      <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\n      <br/>\n      <label for=\"email\" class=\"sr-only\">Email address</label>\n      <input type=\"email\" id=\"email\" name=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" required autofocus>\n      <br/>\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required>\n      <br/>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    </div>\n  </form> -->\n\n  <div class=\"login-wrapper\">\n    <form class=\"login\" (ngSubmit)=\"login()\">\n      <section class=\"title\">\n        <h3 class=\"welcome\">Welcome to</h3>\n        Ghigo Industry\n        <h5 class=\"hint\">User email \"prova\" and password \"prova\" to login </h5>\n      </section>\n      <div class=\"login-group\">\n        <clr-input-container>\n          <label class=\"clr-sr-only\">Username</label>\n          <input type=\"text\" name=\"email\" clrInput placeholder=\"Email\" [(ngModel)]=\"form.email\" />\n        </clr-input-container>\n        <clr-password-container>\n          <label class=\"clr-sr-only\">Password</label>\n          <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\" />\n        </clr-password-container>\n        <clr-checkbox-wrapper>\n          <label>Remember me</label>\n          <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\" />\n        </clr-checkbox-wrapper>\n        <div *ngIf=\"this.invalidLogin\" class=\"error active\">\n          Invalid user name or password\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </div>\n    </form>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InputModel } from 'src/app/api/models';\nimport { LoginService } from 'src/app/api/services';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router, private testService: LoginService) { }\n  public form: InputModel = {\n    email: '',\n    password: '',\n    rememberMe: false\n  }\n  invalidLogin: boolean = false;;\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.testService.loginPost({ body: this.form }).subscribe(response => {\n\n      var parsedResponse = JSON.parse(<any>response);\n      const token = parsedResponse.token;\n      localStorage.setItem(\"jwt\", token);\n      this.invalidLogin = false;\n      this.router.navigate([\"/\"]);\n    }, errors => {\n      this.invalidLogin = true;\n\n    });\n  }\n\n  logOut() {\n    localStorage.removeItem(\"jwt\");\n  }\n}\n","/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { BaseService } from '../base-service';\r\nimport { ApiConfiguration } from '../api-configuration';\r\nimport { StrictHttpResponse } from '../strict-http-response';\r\nimport { RequestBuilder } from '../request-builder';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\nimport { WeatherForecast } from '../models/weather-forecast';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WeatherForecastService extends BaseService {\r\n  constructor(\r\n    config: ApiConfiguration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * Path part for operation weatherForecastGet\r\n   */\r\n  static readonly WeatherForecastGetPath = '/WeatherForecast';\r\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `weatherForecastGet$Plain()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  weatherForecastGet$Plain$Response(params?: {\r\n  }): Observable<StrictHttpResponse<Array<WeatherForecast>>> {\r\n\r\n    const rb = new RequestBuilder(this.rootUrl, WeatherForecastService.WeatherForecastGetPath, 'get');\r\n    if (params) {\r\n    }\r\n\r\n    return this.http.request(rb.build({\r\n      responseType: 'text',\r\n      accept: 'text/plain'\r\n    })).pipe(\r\n      filter((r: any) => r instanceof HttpResponse),\r\n      map((r: HttpResponse<any>) => {\r\n        return r as StrictHttpResponse<Array<WeatherForecast>>;\r\n      })\r\n    );\r\n  }\r\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `weatherForecastGet$Plain$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  weatherForecastGet$Plain(params?: {\r\n  }): Observable<Array<WeatherForecast>> {\r\n\r\n    return this.weatherForecastGet$Plain$Response(params).pipe(\r\n      map((r: StrictHttpResponse<Array<WeatherForecast>>) => r.body as Array<WeatherForecast>)\r\n    );\r\n  }\r\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `weatherForecastGet$Json()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  weatherForecastGet$Json$Response(params?: {\r\n  }): Observable<StrictHttpResponse<Array<WeatherForecast>>> {\r\n\r\n    const rb = new RequestBuilder(this.rootUrl, WeatherForecastService.WeatherForecastGetPath, 'get');\r\n    if (params) {\r\n    }\r\n\r\n    return this.http.request(rb.build({\r\n      responseType: 'json',\r\n      accept: 'text/json'\r\n    })).pipe(\r\n      filter((r: any) => r instanceof HttpResponse),\r\n      map((r: HttpResponse<any>) => {\r\n        return r as StrictHttpResponse<Array<WeatherForecast>>;\r\n      })\r\n    );\r\n  }\r\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `weatherForecastGet$Json$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  weatherForecastGet$Json(params?: {\r\n  }): Observable<Array<WeatherForecast>> {\r\n\r\n    return this.weatherForecastGet$Json$Response(params).pipe(\r\n      map((r: StrictHttpResponse<Array<WeatherForecast>>) => r.body as Array<WeatherForecast>)\r\n    );\r\n  }\r\n\r\n}\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\nimport { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\r\n\r\nimport { LoginService } from './services/login.service';\r\nimport { WeatherForecastService } from './services/weather-forecast.service';\r\n\r\n/**\r\n * Module that provides all services and configuration.\r\n */\r\n@NgModule({\r\n  imports: [],\r\n  exports: [],\r\n  declarations: [],\r\n  providers: [\r\n    LoginService,\r\n    WeatherForecastService,\r\n    ApiConfiguration\r\n  ],\r\n})\r\nexport class ApiModule {\r\n  static forRoot(params: ApiConfigurationParams): ModuleWithProviders<ApiModule> {\r\n    return {\r\n      ngModule: ApiModule,\r\n      providers: [\r\n        {\r\n          provide: ApiConfiguration,\r\n          useValue: params\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  constructor( \r\n    @Optional() @SkipSelf() parentModule: ApiModule,\r\n    @Optional() http: HttpClient\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\r\n    }\r\n    if (!http) {\r\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\r\n      'See also https://github.com/angular/angular/issues/20575');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { WeatherForecastService } from 'src/app/api/services';\n\n@Component({\n  selector: 'app-ghigo',\n  templateUrl: './ghigo.component.html',\n  styleUrls: ['./ghigo.component.scss']\n})\nexport class GhigoComponent implements OnInit {\n\n  constructor(private http: HttpClient, private testService: WeatherForecastService) { }\n\n  public displayData: any = \"loading...\";\n  ngOnInit(): void {\n\n    this.testService.weatherForecastGet$Json().subscribe(response => {\n\n      setTimeout(   ()=>{\n        this.displayData = [];\n        response.map((x: any) => this.displayData.push(x.summary + x.temperatureC))\n      }\n        ,1000)\n    }, errors => {\n      console.log(errors)\n    });\n  }\n}","<p>ghigo works!</p>\n<div style=\"font-size: 32px;font-weight: 700;\">\n{{this.displayData}}\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export { LoginService } from './services/login.service';\r\nexport { WeatherForecastService } from './services/weather-forecast.service';\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Global configuration\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiConfiguration {\r\n  rootUrl: string = '';\r\n}\r\n\r\n/**\r\n * Parameters for `ApiModule.forRoot()`\r\n */\r\nexport interface ApiConfigurationParams {\r\n  rootUrl?: string;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { WeatherForecastService } from './api/services';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private http: HttpClient, private testService: WeatherForecastService, private jwtHelper: JwtHelperService, private router: Router){\r\n\r\n  }\r\n  title = 'Angular2TestApp';\r\n\r\n ngOnInit(){\r\n\r\n  }\r\n\r\n  isUserAuthenticated() {\r\n    const token: any = localStorage.getItem(\"jwt\");\r\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  public logOut = () => {\r\n    localStorage.removeItem(\"jwt\");\r\n  }\r\n}\r\n","\r\n<router-outlet></router-outlet>\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiConfiguration } from './api-configuration';\r\n\r\n/**\r\n * Base class for services\r\n */\r\n@Injectable()\r\nexport class BaseService {\r\n  constructor(\r\n    protected config: ApiConfiguration,\r\n    protected http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  private _rootUrl: string = '';\r\n\r\n  /**\r\n   * Returns the root url for all operations in this service. If not set directly in this\r\n   * service, will fallback to `ApiConfiguration.rootUrl`.\r\n   */\r\n  get rootUrl(): string {\r\n    return this._rootUrl || this.config.rootUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets the root URL for API operations in this service.\r\n   */\r\n  set rootUrl(rootUrl: string) {\r\n    this._rootUrl = rootUrl;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ClarityModule } from '@clr/angular';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {  HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ApiModule } from './api/api.module';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from './login/login-page/login-page.component';\r\nimport { AuthGuard } from './AuthGard';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MainContainerComponent } from './home-page/main-container/main-container.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { httpInterceptor } from './interceptor/http-interceptor-token';\nimport { IonicModule } from '@ionic/angular';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainContainerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ClarityModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule      ,\r\n    CommonModule ,\r\n    BrowserModule ,\r\n    ApiModule.forRoot({ rootUrl: 'http://localhost:5000' }),\r\n    RouterModule.forRoot([\r\n      { path: '', component: AppComponent, canActivate: [AuthGuard] },\r\n      { path: 'login', component: LoginPageComponent },\r\n    ]),\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: [\"localhost:5000\"],\r\n        disallowedRoutes: []\r\n      }\r\n    }),\r\n    IonicModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: httpInterceptor, multi: true },\r\n    AuthGuard]\r\n,\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-container',\n  templateUrl: './main-container.component.html',\n  styleUrls: ['./main-container.component.scss']\n})\nexport class MainContainerComponent implements OnInit {\n  collapsed:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <header class=\"header header-6\">\n      <div class=\"branding\">\n        <a href=\"javascript://\" class=\"nav-link\">\n          <clr-icon shape=\"vm-bug\"></clr-icon>\n          <span class=\"title\">Project Clarity</span>\n        </a>\n      </div>\n\n      <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n          <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n      </div>\n    </header>\n  \n    <div class=\"content-container\">\n      <div class=\"content-area\">\n  <router-outlet></router-outlet>\n      </div>\n      <clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [(clrVerticalNavCollapsed)]=\"collapsed\">\n        <a clrVerticalNavLink routerLink=\"./ghigo\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n          Ghigo\n        </a>\n        <a clrVerticalNavLink routerLink=\"./simo\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n            Simo\n        </a>\n       \n      </clr-vertical-nav>\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class httpInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, newRequest: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        //Get Token data from local storage\r\n        var token = localStorage.getItem(\"jwt\");\r\n        console.log(\"Current token request: \", token)\r\n\r\n        if (token) {\r\n            // add authorization header to request\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json;charset=utf-8;'\r\n                }\r\n            });\r\n        }\r\n\r\n        return newRequest.handle(request);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simo',\n  templateUrl: './simo.component.html',\n  styleUrls: ['./simo.component.scss']\n})\nexport class SimoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>simo works!</p>\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private jwtHelper: JwtHelperService, private router: Router) {\r\n  }\r\n  canActivate() {\r\n    console.log(\"can Activate\");\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token && !this.jwtHelper.isTokenExpired(token)){\r\n      return true;\r\n    }\r\n    console.log(\"redirect to login\");\r\n\r\n    this.router.navigate([\"login\"]);\r\n    return false;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './AuthGard';\r\nimport { GhigoComponent } from './home-page/ghigo/ghigo.component';\r\nimport { MainContainerComponent } from './home-page/main-container/main-container.component';\r\nimport { SimoComponent } from './home-page/simo/simo.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: 'login',\r\n    loadChildren:() => import('./login/login.module').then(m=>m.LoginModule),\r\n  },\r\n  {path: '', component: MainContainerComponent, canActivate:[AuthGuard],\r\n    children: [\r\n      { path: 'ghigo', component: GhigoComponent },\r\n      { path: 'simo', component: SimoComponent },\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { BaseService } from '../base-service';\r\nimport { ApiConfiguration } from '../api-configuration';\r\nimport { StrictHttpResponse } from '../strict-http-response';\r\nimport { RequestBuilder } from '../request-builder';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\nimport { InputModel } from '../models/input-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService extends BaseService {\r\n  constructor(\r\n    config: ApiConfiguration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * Path part for operation loginPost\r\n   */\r\n  static readonly LoginPostPath = '/Login';\r\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `loginPost()` instead.\n   *\n   * This method sends `application/*+json` and handles request body of type `application/*+json`.\n   */\n  loginPost$Response(params?: {\r\n    body?: InputModel\r\n  }): Observable<StrictHttpResponse<void>> {\r\n\r\n    const rb = new RequestBuilder(this.rootUrl, LoginService.LoginPostPath, 'post');\r\n    if (params) {\r\n      rb.body(params.body, 'application/*+json');\r\n    }\r\n\r\n    return this.http.request(rb.build({\r\n      responseType: 'text',\r\n      accept: '*/*'\r\n    })).pipe(\r\n      filter((r: any) => r instanceof HttpResponse),\r\n      map((r: HttpResponse<any>) => {\r\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\r\n      })\r\n    );\r\n  }\r\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `loginPost$Response()` instead.\n   *\n   * This method sends `application/*+json` and handles request body of type `application/*+json`.\n   */\n  loginPost(params?: {\r\n    body?: InputModel\r\n  }): Observable<void> {\r\n\r\n    return this.loginPost$Response(params).pipe(\r\n      map((r: StrictHttpResponse<void>) => r.body as void)\r\n    );\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}